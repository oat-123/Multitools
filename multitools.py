import streamlit as st
import pandas as pd
import random
from collections import defaultdict
from datetime import date
import time
import gspread
from google.oauth2 import service_account
import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots

# ===== ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö =====
st.set_page_config(
    page_title="J.A.R.V.I.S - ‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢ ‡∏ù‡∏≠.1",
    page_icon="üõ°Ô∏è",
    layout="wide",
    initial_sidebar_state="collapsed"
)

# ===== ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ =====
users = {
    "oat": {"password": "crma74", "sheet_name": "‡∏ä‡∏±‡πâ‡∏ô4_‡∏û‡∏±‡∏ô4", "display_name": "‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ OAT", "role": "‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö"},
    "time": {"password": "crma74", "sheet_name": "‡∏ä‡∏±‡πâ‡∏ô4_‡∏û‡∏±‡∏ô1", "display_name": "‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ TIME", "role": "‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"},
    "chai": {"password": "crma74", "sheet_name": "‡∏ä‡∏±‡πâ‡∏ô4_‡∏û‡∏±‡∏ô3", "display_name": "‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ CHAI", "role": "‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"}
}

# ===== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö CSS ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á =====
def load_custom_css():
    st.markdown("""
    <style>
    /* Import Google Fonts */
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
    
    /* Global Styles */
    .stApp {
        font-family: 'Inter', sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
    }
    
    /* Hide Streamlit branding */
    #MainMenu {visibility: hidden;}
    footer {visibility: hidden;}
    header {visibility: hidden;}
    
    /* Custom Header */
    .main-header {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(20px);
        border-radius: 20px;
        padding: 1.5rem;
        margin-bottom: 2rem;
        border: 1px solid rgba(255, 255, 255, 0.2);
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    }
    
    .header-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: white;
        text-align: center;
        margin: 0;
        text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
    }
    
    .header-subtitle {
        font-size: 1.1rem;
        color: rgba(255, 255, 255, 0.8);
        text-align: center;
        margin-top: 0.5rem;
    }
    
    /* Login Card */
    .login-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(20px);
        border-radius: 20px;
        padding: 2rem;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.3);
        max-width: 400px;
        margin: 2rem auto;
    }
    
    .login-title {
        font-size: 1.8rem;
        font-weight: 600;
        color: #2d3748;
        text-align: center;
        margin-bottom: 1.5rem;
    }
    
    /* Dashboard Cards */
    .dashboard-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(20px);
        border-radius: 16px;
        padding: 1.5rem;
        margin: 1rem 0;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.3);
        transition: all 0.3s ease;
        cursor: pointer;
    }
    
    .dashboard-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    }
    
    .card-icon {
        font-size: 2.5rem;
        margin-bottom: 1rem;
        text-align: center;
    }
    
    .card-title {
        font-size: 1.3rem;
        font-weight: 600;
        color: #2d3748;
        text-align: center;
        margin-bottom: 0.5rem;
    }
    
    .card-description {
        font-size: 0.9rem;
        color: #718096;
        text-align: center;
        line-height: 1.5;
    }
    
    /* Stats Cards */
    .stats-card {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border-radius: 16px;
        padding: 1.5rem;
        text-align: center;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        margin: 0.5rem 0;
    }
    
    .stats-number {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
    }
    
    .stats-label {
        font-size: 0.9rem;
        opacity: 0.9;
    }
    
    /* User Profile */
    .user-profile {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(20px);
        border-radius: 16px;
        padding: 1rem;
        margin-bottom: 1rem;
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: white;
    }
    
    .user-name {
        font-size: 1.1rem;
        font-weight: 600;
        margin-bottom: 0.25rem;
    }
    
    .user-role {
        font-size: 0.9rem;
        opacity: 0.8;
    }
    
    /* Buttons */
    .stButton > button {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        border-radius: 12px;
        padding: 0.75rem 1.5rem;
        font-weight: 500;
        font-size: 1rem;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    }
    
    .stButton > button:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
    }
    
    /* Input Fields */
    .stTextInput > div > div > input,
    .stNumberInput > div > div > input,
    .stSelectbox > div > div > select {
        border-radius: 12px;
        border: 2px solid #e2e8f0;
        padding: 0.75rem;
        font-size: 1rem;
        transition: all 0.3s ease;
    }
    
    .stTextInput > div > div > input:focus,
    .stNumberInput > div > div > input:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    }
    
    /* Mobile Responsive */
    @media (max-width: 768px) {
        .header-title {
            font-size: 2rem;
        }
        
        .dashboard-card {
            margin: 0.5rem 0;
            padding: 1rem;
        }
        
        .card-title {
            font-size: 1.1rem;
        }
        
        .stats-number {
            font-size: 2rem;
        }
    }
    
    /* Success/Error Messages */
    .stSuccess {
        background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);
        color: white;
        border-radius: 12px;
        padding: 1rem;
        border: none;
    }
    
    .stError {
        background: linear-gradient(135deg, #f56565 0%, #e53e3e 100%);
        color: white;
        border-radius: 12px;
        padding: 1rem;
        border: none;
    }
    
    .stInfo {
        background: linear-gradient(135deg, #4299e1 0%, #3182ce 100%);
        color: white;
        border-radius: 12px;
        padding: 1rem;
        border: none;
    }
    </style>
    """, unsafe_allow_html=True)

# ===== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheets =====
@st.cache_resource
def connect_gsheet(sheet_name: str):
    try:
        creds_dict = st.secrets["gcp_service_account"]
        SCOPES = ['https://www.googleapis.com/auth/spreadsheets']
        creds = service_account.Credentials.from_service_account_info(creds_dict, scopes=SCOPES)
        client = gspread.authorize(creds)
        sheet = client.open_by_url(
            "https://docs.google.com/spreadsheets/d/1PfZdCw2iL65CPTZzNsCnkhF7EVJNFZHRvYAXqeOJsSk/edit?usp=drivesdk"
        )
        worksheet = sheet.worksheet(sheet_name)
        return worksheet
    except:
        return None

# ===== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤ Login =====
def show_login_page():
    st.markdown('<div class="main-header">', unsafe_allow_html=True)
    st.markdown('<h1 class="header-title">üõ°Ô∏è J.A.R.V.I.S</h1>', unsafe_allow_html=True)
    st.markdown('<p class="header-subtitle">‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞ ‡∏ù‡∏≠.1</p>', unsafe_allow_html=True)
    st.markdown('</div>', unsafe_allow_html=True)
    
    col1, col2, col3 = st.columns([1, 2, 1])
    
    with col2:
        st.markdown('<div class="login-card">', unsafe_allow_html=True)
        st.markdown('<h2 class="login-title">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</h2>', unsafe_allow_html=True)
        
        with st.form("login_form"):
            username = st.text_input("üë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ", placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ")
            password = st.text_input("üîí ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô", type="password", placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô")
            
            col_btn1, col_btn2, col_btn3 = st.columns([1, 2, 1])
            with col_btn2:
                login_button = st.form_submit_button("üöÄ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö", use_container_width=True)
            
            if login_button:
                if username in users and users[username]["password"] == password:
                    st.session_state["logged_in"] = True
                    st.session_state["username"] = username
                    st.session_state["user_data"] = users[username]
                    st.rerun()
                else:
                    st.error("‚ùå ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
        
        st.markdown('</div>', unsafe_allow_html=True)

# ===== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á Dashboard =====
def show_dashboard():
    # Header with user info
    col1, col2 = st.columns([3, 1])
    
    with col1:
        st.markdown('<div class="main-header">', unsafe_allow_html=True)
        st.markdown('<h1 class="header-title">üõ°Ô∏è J.A.R.V.I.S Dashboard</h1>', unsafe_allow_html=True)
        st.markdown('<p class="header-subtitle">‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞ ‡∏ù‡∏≠.1</p>', unsafe_allow_html=True)
        st.markdown('</div>', unsafe_allow_html=True)
    
    with col2:
        st.markdown('<div class="user-profile">', unsafe_allow_html=True)
        st.markdown(f'<div class="user-name">üëã {st.session_state["user_data"]["display_name"]}</div>', unsafe_allow_html=True)
        st.markdown(f'<div class="user-role">{st.session_state["user_data"]["role"]}</div>', unsafe_allow_html=True)
        st.markdown(f'<div class="user-role">üìä {st.session_state["user_data"]["sheet_name"]}</div>', unsafe_allow_html=True)
        if st.button("üö™ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö", key="logout"):
            for key in list(st.session_state.keys()):
                del st.session_state[key]
            st.rerun()
        st.markdown('</div>', unsafe_allow_html=True)
    
    # Stats Section
    st.markdown("### üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏∞‡∏ö‡∏ö")
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        st.markdown("""
        <div class="stats-card">
            <div class="stats-number">150+</div>
            <div class="stats-label">üë• ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ô‡∏≤‡∏¢‡∏£‡πâ‡∏≠‡∏¢</div>
        </div>
        """, unsafe_allow_html=True)
    
    with col2:
        st.markdown("""
        <div class="stats-card">
            <div class="stats-number">24/7</div>
            <div class="stats-label">‚è∞ ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</div>
        </div>
        """, unsafe_allow_html=True)
    
    with col3:
        st.markdown("""
        <div class="stats-card">
            <div class="stats-number">5</div>
            <div class="stats-label">üîß ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å</div>
        </div>
        """, unsafe_allow_html=True)
    
    with col4:
        st.markdown("""
        <div class="stats-card">
            <div class="stats-number">99%</div>
            <div class="stats-label">üìà ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥</div>
        </div>
        """, unsafe_allow_html=True)
    
    st.markdown("---")
    
    # Main Menu
    st.markdown("### üéØ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        if st.button("üõ°Ô∏è", key="night_duty_icon", help="‡πÄ‡∏ß‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Å‡∏≤‡∏£‡∏ì‡πå"):
            st.session_state["current_page"] = "night_duty"
            st.rerun()
        st.markdown("""
        <div class="dashboard-card">
            <div class="card-icon">üõ°Ô∏è</div>
            <div class="card-title">‡πÄ‡∏ß‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Å‡∏≤‡∏£‡∏ì‡πå</div>
            <div class="card-description">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏£‡∏¢‡∏∑‡∏ô‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô<br>‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á</div>
        </div>
        """, unsafe_allow_html=True)
        
        if st.button("üìÖ", key="weekend_duty_icon", help="‡πÄ‡∏ß‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Å‡∏≤‡∏£"):
            st.session_state["current_page"] = "weekend_duty"
            st.rerun()
        st.markdown("""
        <div class="dashboard-card">
            <div class="card-icon">üìÖ</div>
            <div class="card-title">‡πÄ‡∏ß‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Å‡∏≤‡∏£</div>
            <div class="card-description">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏£‡πÄ‡∏™‡∏≤‡∏£‡πå-‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå<br>‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£</div>
        </div>
        """, unsafe_allow_html=True)
    
    with col2:
        if st.button("üèÖ", key="ceremony_icon", help="‡∏à‡∏±‡∏î‡∏¢‡∏≠‡∏î‡∏û‡∏¥‡∏ò‡∏µ"):
            st.session_state["current_page"] = "ceremony_duty"
            st.rerun()
        st.markdown("""
        <div class="dashboard-card">
            <div class="card-icon">üèÖ</div>
            <div class="card-title">‡∏à‡∏±‡∏î‡∏¢‡∏≠‡∏î‡∏û‡∏¥‡∏ò‡∏µ</div>
            <div class="card-description">‡∏™‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏¢‡∏≠‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡∏û‡∏¥‡∏ò‡∏µ<br>‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</div>
        </div>
        """, unsafe_allow_html=True)
        
        if st.button("üìù", key="home_icon", help="‡∏¢‡∏≠‡∏î‡∏õ‡∏•‡πà‡∏≠‡∏¢"):
            st.session_state["current_page"] = "home"
            st.rerun()
        st.markdown("""
        <div class="dashboard-card">
            <div class="card-icon">üìù</div>
            <div class="card-title">‡∏¢‡∏≠‡∏î‡∏õ‡∏•‡πà‡∏≠‡∏¢</div>
            <div class="card-description">‡∏û‡∏¥‡∏°‡∏û‡πå‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô<br>‡∏¢‡∏≠‡∏î‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô</div>
        </div>
        """, unsafe_allow_html=True)
    
    with col3:
        if st.button("üìä", key="stats_icon", help="‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÇ‡∏î‡∏ô‡∏¢‡∏≠‡∏î"):
            st.session_state["current_page"] = "count"
            st.rerun()
        st.markdown("""
        <div class="dashboard-card">
            <div class="card-icon">üìä</div>
            <div class="card-title">‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÇ‡∏î‡∏ô‡∏¢‡∏≠‡∏î</div>
            <div class="card-description">‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö<br>‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡∏ô‡∏¢‡∏≠‡∏î</div>
        </div>
        """, unsafe_allow_html=True)

# ===== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ =====
def show_night_duty_page():
    st.markdown("## üõ°Ô∏è ‡πÄ‡∏ß‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Å‡∏≤‡∏£‡∏ì‡πå")
    
    if st.button("‚Üê ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å"):
        st.session_state["current_page"] = "dashboard"
        st.rerun()
    
    st.info("üí° ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ‡πÄ‡∏ß‡∏£‡∏¢‡∏∑‡∏ô‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô - ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏•‡∏≠‡∏î 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á")
    
    # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ä‡∏µ‡∏ó
    sheet_option = st.radio(
        "üìã ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡∏π‡∏ä‡∏µ‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
        ("‡πÅ‡∏ó‡πá‡∏Å‡πÄ‡∏ß‡∏£", "‡πÉ‡∏ö‡πÄ‡∏ß‡∏£ (‡∏™‡∏£‡∏∏‡∏õ)"),
        horizontal=True
    )
    
    # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    if sheet_option == "‡πÅ‡∏ó‡πá‡∏Å‡πÄ‡∏ß‡∏£":
        iframe_link = "https://docs.google.com/spreadsheets/d/e/2PACX-1vR8pO9068jsukCJL0guT_dF7I5cjYMMIhsu7ah-1DkPxSMxnYFsSkuRgffvSUJKVZzQccQyJEOPxvvg/pubhtml?gid=0&single=true&range=A1:I100"
        edit_link = "https://docs.google.com/spreadsheets/d/1PjT38W2Zx7KV764yv9Vjwo9i0TJPacRI0iUGzP0ItAU/edit#gid=0"
    else:
        iframe_link = "https://docs.google.com/spreadsheets/d/e/2PACX-1vR8pO9068jsukCJL0guT_dF7I5cjYMMIhsu7ah-1DkPxSMxnYFsSkuRgffvSUJKVZzQccQyJEOPxvvg/pubhtml?gid=2030248910&single=true&range=A1:I100"
        edit_link = "https://docs.google.com/spreadsheets/d/1PjT38W2Zx7KV764yv9Vjwo9i0TJPacRI0iUGzP0ItAU/edit#gid=1"
    
    # ‡πÅ‡∏™‡∏î‡∏á iframe
    st.markdown(f"""
    <div style="
        background: rgba(255, 255, 255, 0.95);
        border-radius: 16px;
        padding: 1rem;
        margin: 1rem 0;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    ">
        <iframe src="{iframe_link}" 
                width="100%" 
                height="800" 
                style="border: none; border-radius: 12px;">
        </iframe>
        <div style="text-align: center; margin-top: 1rem;">
            <a href="{edit_link}" target="_blank" 
               style="
                   background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                   color: white;
                   padding: 0.75rem 1.5rem;
                   border-radius: 12px;
                   text-decoration: none;
                   font-weight: 500;
                   display: inline-block;
                   box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
               ">
                ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Google Sheets
            </a>
        </div>
    </div>
    """, unsafe_allow_html=True)

def show_weekend_duty_page():
    st.markdown("## üìÖ ‡πÄ‡∏ß‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Å‡∏≤‡∏£")
    
    if st.button("‚Üê ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å"):
        st.session_state["current_page"] = "dashboard"
        st.rerun()
    
    st.info("üí° ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ‡πÄ‡∏ß‡∏£‡πÄ‡∏™‡∏≤‡∏£‡πå-‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå ‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£")
    
    st.markdown("""
    <div style="
        background: rgba(255, 255, 255, 0.95);
        border-radius: 16px;
        padding: 2rem;
        margin: 1rem 0;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        text-align: center;
    ">
        <h3>üìä ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ß‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Å‡∏≤‡∏£</h3>
        <p>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏£‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏™‡∏∏‡∏î‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå</p>
        <a href="https://docs.google.com/spreadsheets/d/1ufm0LPa4c903jhlANKn_YqNyMtG9id0iN-tMHrhNRA8/edit?gid=1888956716" 
           target="_blank"
           style="
               background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);
               color: white;
               padding: 1rem 2rem;
               border-radius: 12px;
               text-decoration: none;
               font-weight: 500;
               display: inline-block;
               box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
               margin-top: 1rem;
           ">
            üìÉ ‡πÄ‡∏õ‡∏¥‡∏î Google Sheets
        </a>
    </div>
    """, unsafe_allow_html=True)

def show_home_page():
    st.markdown("## üìù ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏¢‡∏≠‡∏î‡∏õ‡∏•‡πà‡∏≠‡∏¢")
    
    if st.button("‚Üê ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å"):
        st.session_state["current_page"] = "dashboard"
        st.rerun()
    
    # ‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏£‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
    col1, col2 = st.columns(2)
    with col1:
        start_date = st.date_input("üìÖ ‡∏ß‡∏±‡∏ô‡∏õ‡∏•‡πà‡∏≠‡∏¢", date.today())
    with col2:
        end_date = st.date_input("üìÖ ‡∏ß‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏£.", date.today())
    
    # ‡∏¢‡∏≠‡∏î‡πÄ‡∏î‡∏¥‡∏°‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ
    defaults = {5: 67, 4: 101, 3: 94, 2: 85}
    categories = ["‡πÄ‡∏ß‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°", "‡∏Å‡∏±‡∏Å‡∏ö‡∏£‡∏¥‡πÄ‡∏ß‡∏ì", "‡∏≠‡∏¢‡∏π‡πà‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô", "‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£", "‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•", "‡∏•‡∏≤", "‡∏≠‡∏∑‡πà‡∏ô‡πÜ"]
    
    st.markdown("### üìä ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ")
    
    data = {}
    year_colors = {
        5: "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
        4: "linear-gradient(135deg, #f093fb 0%, #f5576c 100%)",
        3: "linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)",
        2: "linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)",
    }
    
    for year in [5, 4, 3, 2]:
        data[year] = {}
        
        st.markdown(f"""
        <div style="
            background: {year_colors[year]};
            border-radius: 16px;
            padding: 1.5rem;
            margin: 1rem 0;
            color: white;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        ">
            <h4 style="margin: 0 0 1rem 0; text-align: center;">
                üéì ‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ‡∏ó‡∏µ‡πà {year} (‡∏¢‡∏≠‡∏î‡πÄ‡∏î‡∏¥‡∏°: {defaults[year]} ‡∏ô‡∏≤‡∏¢)
            </h4>
        </div>
        """, unsafe_allow_html=True)
        
        cols = st.columns(len(categories))
        for i, cat in enumerate(categories):
            with cols[i % len(cols)]:
                val = st.number_input(
                    f"{cat}",
                    min_value=0,
                    step=1,
                    key=f"{cat}_{year}",
                    help=f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô{cat} ‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ‡∏ó‡∏µ‡πà {year}"
                )
                data[year][cat] = val
    
    # ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
    col1, col2 = st.columns(2)
    with col1:
        if st.button("üìò ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô", use_container_width=True):
            st.session_state["generate_report"] = True
    
    with col2:
        st.markdown("""
        <a href="https://docs.google.com/spreadsheets/d/1_kKUegxtwwd3ce3EduPqRoPpgAF1_IcecA1ri9Pfxz0/edit?gid=351113778#gid=351113778" 
           target="_blank"
           style="
               background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);
               color: white;
               padding: 0.75rem 1.5rem;
               border-radius: 12px;
               text-decoration: none;
               font-weight: 500;
               display: block;
               text-align: center;
               box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
           ">
            üìó ‡∏ó‡∏≥‡πÑ‡∏ü‡∏•‡πå Excel
        </a>
        """, unsafe_allow_html=True)
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
    if st.session_state.get("generate_report", False):
        st.success("‚úÖ ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
        
        lines = []
        start_str = start_date.strftime("%-d %b").replace("May", "‡∏û.‡∏Ñ.").replace("Jun", "‡∏°‡∏¥.‡∏¢.")
        thai_year = end_date.year + 543
        end_str = end_date.strftime("%-d %b").replace("May", "‡∏û.‡∏Ñ.").replace("Jun", "‡∏°‡∏¥.‡∏¢.") + f" {str(thai_year)[-2:]}"
        
        lines.append(f"‡∏û‡∏±‡∏ô.4 ‡∏Å‡∏£‡∏° ‡∏ô‡∏ô‡∏£.‡∏£‡∏≠. ‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏™‡πà‡∏á‡∏¢‡∏≠‡∏î ‡∏ô‡∏ô‡∏£. ‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏û‡∏±‡∏Å‡∏ö‡πâ‡∏≤‡∏ô, ‡∏≠‡∏¢‡∏π‡πà‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡πÅ‡∏•‡∏∞ ‡πÄ‡∏ß‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏° ‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {start_str} - {end_str} ‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ")
        
        for y in [5, 4, 3, 2]:
            lines.append(f"‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ‡∏ó‡∏µ‡πà {y} ‡∏¢‡∏≠‡∏î‡πÄ‡∏î‡∏¥‡∏° {defaults[y]} ‡∏ô‡∏≤‡∏¢")
        
        # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏ö‡πâ‡∏≤‡∏ô
        lines.append("1.‡∏¢‡∏≠‡∏î‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏û‡∏±‡∏Å‡∏ö‡πâ‡∏≤‡∏ô")
        total_home = 0
        for y in [5, 4, 3, 2]:
            sum_others = sum(data[y].values())
            val = defaults[y] - sum_others
            total_home += val
            lines.append(f"   -‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ‡∏ó‡∏µ‡πà {y} ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {val} ‡∏ô‡∏≤‡∏¢")
        lines.append(f"   -‡∏£‡∏ß‡∏° {total_home} ‡∏ô‡∏≤‡∏¢")
        
        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏≠‡∏∑‡πà‡∏ô‡πÜ
        for i, cat in enumerate(["‡∏≠‡∏¢‡∏π‡πà‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô", "‡πÄ‡∏ß‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°", "‡∏Å‡∏±‡∏Å‡∏ö‡∏£‡∏¥‡πÄ‡∏ß‡∏ì", "‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•", "‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£", "‡∏•‡∏≤", "‡∏≠‡∏∑‡πà‡∏ô‡πÜ"], start=2):
            lines.append(f"{i}.{cat}")
            total = 0
            for y in [5, 4, 3, 2]:
                val = data[y].get(cat, 0)
                total += val
                show_val = f"{val}" if val != 0 else "-"
                lines.append(f"   -‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ‡∏ó‡∏µ‡πà {y} ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {show_val} ‡∏ô‡∏≤‡∏¢")
            show_total = f"{total}" if total != 0 else "-"
            lines.append(f"   -‡∏£‡∏ß‡∏° {show_total} ‡∏ô‡∏≤‡∏¢")
        
        lines.append("‡∏à‡∏∂‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ó‡∏£‡∏≤‡∏ö")
        
        st.text_area("üìã ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏¢‡∏≠‡∏î‡∏õ‡∏•‡πà‡∏≠‡∏¢", value="\n".join(lines), height=400)

def show_count_page():
    st.markdown("## üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÇ‡∏î‡∏ô‡∏¢‡∏≠‡∏î")
    
    if st.button("‚Üê ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å"):
        st.session_state["current_page"] = "dashboard"
        st.rerun()
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡∏π‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
    sheet_id = "1PfZdCw2iL65CPTZzNsCnkhF7EVJNFZHRvYAXqeOJsSk"
    user_gid_map = {
        "oat": "0",
        "time": "589142731", 
        "chai": "258225546",
    }
    
    username = st.session_state.get("username", "")
    gid = user_gid_map.get(username, "0")
    sheet_url = f"https://docs.google.com/spreadsheets/d/{sheet_id}/edit#gid={gid}"
    
    st.markdown(f"""
    <div style="
        background: rgba(255, 255, 255, 0.95);
        border-radius: 16px;
        padding: 2rem;
        margin: 1rem 0;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        text-align: center;
    ">
        <h3>üìà ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô</h3>
        <p>‡∏î‡∏π‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÇ‡∏î‡∏ô‡∏¢‡∏≠‡∏î‡∏Ç‡∏≠‡∏á {st.session_state["user_data"]["sheet_name"]}</p>
        <a href="{sheet_url}" target="_blank"
           style="
               background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
               color: white;
               padding: 1rem 2rem;
               border-radius: 12px;
               text-decoration: none;
               font-weight: 500;
               display: inline-block;
               box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
               margin-top: 1rem;
           ">
            üîç ‡∏î‡∏π‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÇ‡∏î‡∏ô‡∏¢‡∏≠‡∏î
        </a>
    </div>
    """, unsafe_allow_html=True)
    
    # ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå
    st.markdown("### üì§ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏¢‡∏≠‡∏î")
    uploaded_file = st.file_uploader("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå Excel (.xlsx)", type="xlsx")
    
    if uploaded_file:
        try:
            xls = pd.ExcelFile(uploaded_file)
            sheet_names = xls.sheet_names
            
            selected_sheets = st.multiselect("üìÑ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏µ‡∏ó‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏ö‡πÅ‡∏ï‡πâ‡∏°", sheet_names)
            
            if selected_sheets:
                st.success(f"‚úÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß {len(selected_sheets)} ‡∏ä‡∏µ‡∏ó")
                
                # ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                for sheet in selected_sheets:
                    with st.expander(f"üìã ‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: {sheet}"):
                        df = pd.read_excel(xls, sheet_name=sheet, header=None, skiprows=3)
                        df = df.dropna(how='all')
                        
                        if df.shape[1] >= 4:
                            preview_df = pd.DataFrame({
                                "‡∏•‡∏≥‡∏î‡∏±‡∏ö": df.iloc[:, 0],
                                "‡∏ä‡∏∑‡πà‡∏≠": df.iloc[:, 2], 
                                "‡∏™‡∏Å‡∏∏‡∏•": df.iloc[:, 3],
                            })
                            st.dataframe(preview_df.head(10), use_container_width=True)
                        else:
                            st.warning("‚ö†Ô∏è ‡πÑ‡∏ü‡∏•‡πå‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö")
                
                if st.button("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏ï‡πâ‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏∞‡∏ö‡∏ö", use_container_width=True):
                    st.success("üéâ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")
                    st.balloons()
        
        except Exception as e:
            st.error(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

def show_ceremony_duty_page():
    st.markdown("## üèÖ ‡∏à‡∏±‡∏î‡∏¢‡∏≠‡∏î‡∏û‡∏¥‡∏ò‡∏µ")
    
    if st.button("‚Üê ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å"):
        st.session_state["current_page"] = "dashboard"
        st.rerun()
    
    st.info("üí° ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏¢‡∏≠‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡∏û‡∏¥‡∏ò‡∏µ‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")
    
    # ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    col1, col2 = st.columns(2)
    
    with col1:
        ceremony_name = st.text_input("üîñ ‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡∏≠‡∏î‡∏û‡∏¥‡∏ò‡∏µ", placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏¢‡∏≠‡∏î‡∏û‡∏¥‡∏ò‡∏µ‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå")
        num_people = st.number_input("üë• ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô", min_value=1, max_value=100, value=10)
    
    with col2:
        exclude_duties = st.multiselect(
            "‚õî ‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà",
            ["‡∏ä‡∏±‡πâ‡∏ô‡∏Å‡∏£‡∏°", "‡∏ä‡∏±‡πâ‡∏ô‡∏û‡∏±‡∏ô", "‡∏ù‡∏≠.1", "‡∏ù‡∏≠.4", "‡∏ù‡∏≠.5", "‡πÅ‡∏ã‡∏ô‡πÄ‡∏Æ‡∏¥‡∏£‡πå‡∏ó", "‡∏≠‡∏¥‡∏™‡∏•‡∏≤‡∏°", "‡∏Ñ‡∏£‡∏¥‡∏™‡∏ï‡πå"]
        )
        
        exclude_clubs = st.multiselect(
            "‚õî ‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏°‡∏£‡∏°",
            ["‡∏Å‡∏£‡∏µ‡∏ë‡∏≤", "‡∏à‡∏±‡∏Å‡∏£‡∏¢‡∏≤‡∏ô", "‡πÑ‡∏ã‡πÄ‡∏ö‡∏≠‡∏£‡πå", "‡∏î‡∏ô‡∏ï‡∏£‡∏µ‡πÑ‡∏ó‡∏¢", "‡∏î‡∏ô‡∏ï‡∏£‡∏µ‡∏™‡∏≤‡∏Å‡∏•", "‡∏î‡∏≤‡∏ö‡∏™‡∏≤‡∏Å‡∏•", 
             "‡∏ô‡∏¥‡πÄ‡∏ó‡∏®", "‡∏™‡∏ï‡∏™", "‡∏ö‡∏≤‡∏™", "‡πÇ‡∏õ‡πÇ‡∏•‡∏ô‡πâ‡∏≥", "‡∏ü‡∏∏‡∏ï‡∏ö‡∏≠‡∏•", "‡∏¢‡∏π‡πÇ‡∏î", "‡∏£‡∏±‡∏Å‡∏ö‡∏µ‡πâ", "‡πÅ‡∏ö‡∏ï‡∏°‡∏¥‡∏ô‡∏ï‡∏±‡∏ô"]
        )
    
    if st.button("üé≤ ‡∏à‡∏±‡∏î‡∏¢‡∏≠‡∏î‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå", use_container_width=True):
        if ceremony_name:
            st.success(f"‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏¢‡∏≠‡∏î '{ceremony_name}' ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {num_people} ‡∏Ñ‡∏ô ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")
            
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
            sample_data = []
            for i in range(num_people):
                sample_data.append({
                    "‡∏•‡∏≥‡∏î‡∏±‡∏ö": i + 1,
                    "‡∏¢‡∏® ‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•": f"‡∏ô‡∏ô‡∏£.‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á {i + 1}",
                    "‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ‡∏ó‡∏µ‡πà": random.choice([2, 3, 4, 5]),
                    "‡∏ï‡∏≠‡∏ô": random.choice(["‡∏Å", "‡∏Ç", "‡∏Ñ", "‡∏á"]),
                    "‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á": "‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ô‡∏≤‡∏¢‡∏£‡πâ‡∏≠‡∏¢",
                    "‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î": random.choice(["‡∏û‡∏±‡∏ô 1", "‡∏û‡∏±‡∏ô 2", "‡∏û‡∏±‡∏ô 3", "‡∏û‡∏±‡∏ô 4"]),
                    "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå": f"08{random.randint(10000000, 99999999)}",
                    "‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏": ""
                })
            
            df = pd.DataFrame(sample_data)
            st.dataframe(df, use_container_width=True)
            
            # ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
            csv = df.to_csv(index=False, encoding='utf-8-sig')
            st.download_button(
                label="üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå CSV",
                data=csv,
                file_name=f"{ceremony_name}.csv",
                mime="text/csv"
            )
            
            st.balloons()
        else:
            st.error("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡∏≠‡∏î‡∏û‡∏¥‡∏ò‡∏µ")

# ===== Main Application =====
def main():
    load_custom_css()
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
    if not st.session_state.get("logged_in", False):
        show_login_page()
        return
    
    # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    current_page = st.session_state.get("current_page", "dashboard")
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    if current_page == "dashboard":
        show_dashboard()
    elif current_page == "night_duty":
        show_night_duty_page()
    elif current_page == "weekend_duty":
        show_weekend_duty_page()
    elif current_page == "home":
        show_home_page()
    elif current_page == "count":
        show_count_page()
    elif current_page == "ceremony_duty":
        show_ceremony_duty_page()
    
    # Footer
    st.markdown("---")
    st.markdown("""
    <div style="text-align: center; color: rgba(255, 255, 255, 0.7); padding: 2rem;">
        <p>üõ°Ô∏è J.A.R.V.I.S ¬© 2025 | ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏î‡∏¢ Oat | ‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞ ‡∏ù‡∏≠.1</p>
    </div>
    """, unsafe_allow_html=True)

if __name__ == "__main__":
    main()
